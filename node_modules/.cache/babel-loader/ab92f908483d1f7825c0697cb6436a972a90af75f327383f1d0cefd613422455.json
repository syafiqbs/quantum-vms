{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport SideBarVendor from './side-bar';\nimport axios from \"axios\";\nexport default {\n  name: 'AccManager',\n  metaInfo: {\n    title: 'Account-Manager - Quantum VMS',\n    meta: [{\n      property: 'og:title',\n      content: 'Account-Manager - Quantum VMS'\n    }]\n  },\n  components: {\n    SideBarVendor: SideBarVendor\n  },\n  data: function data() {\n    return {\n      name: '',\n      email: '',\n      contact: '',\n      password: '',\n      vendors: [],\n      token: '',\n      vendorToken: '',\n      modal: {\n        id: 'modal-prevent-closing2',\n        name: '',\n        email: '',\n        contact: '',\n        index: 0\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n    // Simple POST request with a JSON body using axios\n    var user = {\n      \"email\": \"admin@admin.com\",\n      \"password\": \"123\"\n    };\n    axios.post(\"http://localhost:8080/api/v1/auth/user/authenticate\", user).then(function (response) {\n      return _this.token = response.data.token;\n    });\n  },\n  methods: {\n    deleteRow: function deleteRow(index, vendor) {\n      var idx = this.vendors.indexOf(vendor);\n      console.log(idx, index);\n      if (idx > -1) {\n        this.vendors.splice(idx, 1);\n      }\n    },\n    resetModal: function resetModal() {\n      this.name = '';\n      this.email = '';\n      this.contact = '';\n      this.password = '';\n    },\n    handleOk: function handleOk(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n      // Push the name to submitted names\n      var user = {\n        \"name\": \"companyABC\",\n        \"email\": \"user@user5.com\",\n        \"contactNumber\": \"123456789\",\n        \"password\": \"123\"\n      };\n      this.token = \"Bearer \" + this.token;\n      console.log(this.token);\n      axios.post(\"http://localhost:8080/api/v1/auth/admin/register\", user, {\n        headers: {\n          Authorization: this.token\n        }\n      }).then(function (response) {\n        return console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.$nextTick(function () {\n        _this2.$bvModal.hide('modal-prevent-closing1');\n      });\n    },\n    editRow: function editRow(index, vendor, button) {\n      this.modal.name = vendor.name;\n      this.modal.email = vendor.email;\n      this.modal.contact = vendor.contact;\n      this.modal.index = index;\n      this.$root.$emit('bv::show::modal', this.modal.id, 'btnShow');\n    },\n    handleOk2: function handleOk2(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger edit handler\n      this.handleSubmit2();\n    },\n    handleSubmit2: function handleSubmit2() {\n      var _this3 = this;\n      // Push the name to submitted names\n      this.vendors[this.modal.index] = {\n        name: this.name,\n        email: this.email,\n        contact: this.contact\n      };\n      this.$nextTick(function () {\n        _this3.$bvModal.hide('modal-prevent-closing2');\n      });\n    }\n  }\n};","map":{"version":3,"names":["SideBarVendor","axios","name","metaInfo","title","meta","property","content","components","data","email","contact","password","vendors","token","vendorToken","modal","id","index","created","_this","user","post","then","response","methods","deleteRow","vendor","idx","indexOf","console","log","splice","resetModal","handleOk","bvModalEvent","preventDefault","handleSubmit","_this2","headers","Authorization","catch","error","$nextTick","$bvModal","hide","editRow","button","$root","$emit","handleOk2","handleSubmit2","_this3"],"sources":["src/views/acc-manager.vue"],"sourcesContent":["<template>\r\n    <!-- Latest compiled and minified CSS -->\r\n    \r\n    <div>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"https://unpkg.com/bootstrap/dist/css/bootstrap.min.css\" />\r\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css\" />\r\n    \r\n        <SideBarVendor></SideBarVendor>\r\n        <div class=\"main\">\r\n            <div class=\"mx-4\">\r\n                <div>   \r\n                    <div class=\"row\">\r\n                        <h1>Account Manager</h1>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <p class=\"col\">Overview of vendor accounts</p> \r\n                        <div class=\"col\">\r\n                            <b-button type=\"button\" class=\"btn btn-dark float-end\">{{token}}</b-button>\r\n                            <b-button type=\"button\" class=\"btn btn-dark float-end\" v-b-modal.modal-prevent-closing1>Create</b-button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <h1>{{vendorToken}}</h1>\r\n                    </div>\r\n                    \r\n                    <!-- Modal Create-->\r\n                    <b-modal\r\n                      id=\"modal-prevent-closing1\"\r\n                      ref=\"modal\"\r\n                      title=\"Create new vendor\"\r\n                      @show=\"resetModal\"\r\n                      @hidden=\"resetModal\"\r\n                      @ok=\"handleOk\"\r\n                    >\r\n                      <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\r\n                        <b-form-group\r\n                          label=\"Name\"\r\n                          label-for=\"name-input\"\r\n                          invalid-feedback=\"Name is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"name-input\"\r\n                            v-model=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n    \r\n                        <b-form-group\r\n                          label=\"Email\"\r\n                          label-for=\"email-input\"\r\n                          invalid-feedback=\"Email is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"name-input\"\r\n                            v-model=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n    \r\n                        <b-form-group\r\n                          label=\"ContactNo\"\r\n                          label-for=\"contact-input\"\r\n                          invalid-feedback=\"Contact Number is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"contact-input\"\r\n                            v-model=\"contact\"\r\n                            placeholder=\"Enter your Contact Number\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n\r\n                        <b-form-group\r\n                          label=\"Password\"\r\n                          label-for=\"password\"\r\n                          invalid-feedback=\"Password is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"password\"\r\n                            v-model=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n\r\n                      </form>\r\n                    </b-modal>\r\n    \r\n                    <!-- Modal Edit-->\r\n                    <b-modal\r\n                      id=\"modal-prevent-closing2\"\r\n                      ref=\"modal\"\r\n                      title=\"Edit Name\"\r\n                      @show=\"resetModal\"\r\n                      @hidden=\"resetModal\"\r\n                      @ok=\"handleOk2\"\r\n                    >\r\n                      <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\r\n                        <b-form-group\r\n                          label=\"Name\"\r\n                          label-for=\"name-input\"\r\n                          invalid-feedback=\"Name is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"name-input\"\r\n                            v-model= \"name\"\r\n                            placeholder= \"name\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n    \r\n                        <b-form-group\r\n                          label=\"Email\"\r\n                          label-for=\"email-input\"\r\n                          invalid-feedback=\"Email is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"name-input\"\r\n                            v-model=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"email\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n    \r\n                        <b-form-group\r\n                          label=\"ContactNo\"\r\n                          label-for=\"contact-input\"\r\n                          invalid-feedback=\"Contact Number is required\"\r\n                        >\r\n                          <b-form-input\r\n                            id=\"contact-input\"\r\n                            v-model=\"contact\"\r\n                            placeholder=\"contact\"\r\n                            required\r\n                          ></b-form-input>\r\n                        </b-form-group>\r\n                      </form>\r\n                    </b-modal>\r\n    \r\n                </div>\r\n            \r\n    \r\n                <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">ID</th>\r\n                          <th scope=\"col\">Name</th>\r\n                          <th scope=\"col\">Email</th>\r\n                          <th scope=\"col\">Contact No</th>\r\n                          <th scope=\"col\">Date Created</th>\r\n                          <th scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(vendor, k) in vendors\" :key=\"k\">\r\n                          <th scope=\"row\">1</th>\r\n                          <td>{{vendor.name}}</td>\r\n                          <td>{{vendor.email}}</td>\r\n                          <td>{{vendor.contact}}</td>\r\n                          <td>03/02/23</td>\r\n                          <td>\r\n                            <b-button type=\"button\" class=\"btn btn-dark mx-1\" @click=\"editRow(k, vendor, $event.target)\" ref=\"btnShow\">Edit</b-button>\r\n                            <b-button type=\"button\" class=\"btn btn-dark mx-1\" @click=\"deleteRow(k, vendor)\">Delete</b-button>\r\n                          </td>\r\n                        </tr>\r\n    \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    import SideBarVendor from './side-bar';\r\n    import axios from \"axios\";\r\n    \r\n    \r\n    \r\n    export default {\r\n      name: 'AccManager',\r\n      metaInfo: {\r\n        title: 'Account-Manager - Quantum VMS',\r\n        meta: [\r\n          {\r\n            property: 'og:title',\r\n            content: 'Account-Manager - Quantum VMS',\r\n          },\r\n        ],\r\n      },\r\n      components: {\r\n        SideBarVendor \r\n      },\r\n      data () {\r\n          return {\r\n            \r\n            name: '',\r\n            email: '',\r\n            contact: '',\r\n            password: '',\r\n            vendors: [],\r\n            token: '',\r\n            vendorToken: '',\r\n            modal: {\r\n              id: 'modal-prevent-closing2',\r\n              name: '',\r\n              email: '',\r\n              contact: '',\r\n              index: 0\r\n            }\r\n            \r\n            \r\n            \r\n          }\r\n      },\r\n      created() {\r\n        // Simple POST request with a JSON body using axios\r\n        const user = {\r\n            \"email\" : \"admin@admin.com\",\r\n            \"password\" : \"123\"\r\n        };\r\n        axios.post(\"http://localhost:8080/api/v1/auth/user/authenticate\", user)\r\n          .then(response => this.token = response.data.token);\r\n      },\r\n      \r\n      methods: {\r\n          deleteRow(index, vendor) {\r\n            var idx = this.vendors.indexOf(vendor);\r\n            console.log(idx, index);\r\n            if (idx > -1) {\r\n              this.vendors.splice(idx, 1);\r\n            }\r\n          },\r\n          resetModal() {\r\n            this.name = ''\r\n            this.email = ''\r\n            this.contact = ''\r\n            this.password = ''\r\n          },\r\n          handleOk(bvModalEvent) {\r\n            // Prevent modal from closing\r\n            bvModalEvent.preventDefault()\r\n            // Trigger submit handler\r\n            this.handleSubmit()\r\n          },\r\n          handleSubmit() {\r\n            // Push the name to submitted names\r\n            const user = {\r\n    \"name\" : \"companyABC\",\r\n    \"email\" : \"user@user5.com\",\r\n    \"contactNumber\" : \"123456789\",\r\n    \"password\" : \"123\"\r\n};\r\n            this.token = `Bearer ` + this.token\r\n            console.log(this.token);\r\n            axios.post(\"http://localhost:8080/api/v1/auth/admin/register\", user, {headers: {\r\n              Authorization : this.token\r\n            }})\r\n            .then(response => console.log(response))\r\n            .catch ((error) => {\r\n              console.log(error)\r\n            })\r\n            \r\n    \r\n            this.$nextTick(() => {\r\n              this.$bvModal.hide('modal-prevent-closing1')\r\n            })\r\n          },\r\n          editRow(index, vendor, button) {\r\n            this.modal.name = vendor.name\r\n            this.modal.email = vendor.email\r\n            this.modal.contact = vendor.contact\r\n            this.modal.index = index\r\n            this.$root.$emit('bv::show::modal', this.modal.id, 'btnShow')\r\n    \r\n          },   \r\n          handleOk2(bvModalEvent) {\r\n            // Prevent modal from closing\r\n            bvModalEvent.preventDefault()\r\n            // Trigger edit handler\r\n            this.handleSubmit2()\r\n          },\r\n          handleSubmit2() {\r\n            // Push the name to submitted names\r\n            this.vendors[this.modal.index] = {\r\n              name : this.name,\r\n              email : this.email,\r\n              contact : this.contact\r\n            }\r\n    \r\n            this.$nextTick(() => {\r\n              this.$bvModal.hide('modal-prevent-closing2')\r\n            })\r\n          }\r\n      }\r\n    }\r\n    </script>\r\n    \r\n    <style>\r\n    \r\n    .main {\r\n      margin-left: 240px; /* Same as the width of the sidenav */\r\n      padding: 0px 10px;\r\n    }\r\n    \r\n    \r\n    \r\n    </style>"],"mappings":";;AAoLA,OAAAA,aAAA;AACA,OAAAC,KAAA;AAIA;EACAC,IAAA;EACAC,QAAA;IACAC,KAAA;IACAC,IAAA,GACA;MACAC,QAAA;MACAC,OAAA;IACA;EAEA;EACAC,UAAA;IACAR,aAAA,EAAAA;EACA;EACAS,IAAA,WAAAA,KAAA;IACA;MAEAP,IAAA;MACAQ,KAAA;MACAC,OAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACAC,WAAA;MACAC,KAAA;QACAC,EAAA;QACAf,IAAA;QACAQ,KAAA;QACAC,OAAA;QACAO,KAAA;MACA;IAIA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA;IACA,IAAAC,IAAA;MACA;MACA;IACA;IACApB,KAAA,CAAAqB,IAAA,wDAAAD,IAAA,EACAE,IAAA,WAAAC,QAAA;MAAA,OAAAJ,KAAA,CAAAN,KAAA,GAAAU,QAAA,CAAAf,IAAA,CAAAK,KAAA;IAAA;EACA;EAEAW,OAAA;IACAC,SAAA,WAAAA,UAAAR,KAAA,EAAAS,MAAA;MACA,IAAAC,GAAA,QAAAf,OAAA,CAAAgB,OAAA,CAAAF,MAAA;MACAG,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAV,KAAA;MACA,IAAAU,GAAA;QACA,KAAAf,OAAA,CAAAmB,MAAA,CAAAJ,GAAA;MACA;IACA;IACAK,UAAA,WAAAA,WAAA;MACA,KAAA/B,IAAA;MACA,KAAAQ,KAAA;MACA,KAAAC,OAAA;MACA,KAAAC,QAAA;IACA;IACAsB,QAAA,WAAAA,SAAAC,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAC,YAAA;IACA;IACAA,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MACA;MACA,IAAAjB,IAAA;QACA;QACA;QACA;QACA;MACA;MACA,KAAAP,KAAA,oBAAAA,KAAA;MACAgB,OAAA,CAAAC,GAAA,MAAAjB,KAAA;MACAb,KAAA,CAAAqB,IAAA,qDAAAD,IAAA;QAAAkB,OAAA;UACAC,aAAA,OAAA1B;QACA;MAAA,GACAS,IAAA,WAAAC,QAAA;QAAA,OAAAM,OAAA,CAAAC,GAAA,CAAAP,QAAA;MAAA,GACAiB,KAAA,WAAAC,KAAA;QACAZ,OAAA,CAAAC,GAAA,CAAAW,KAAA;MACA;MAGA,KAAAC,SAAA;QACAL,MAAA,CAAAM,QAAA,CAAAC,IAAA;MACA;IACA;IACAC,OAAA,WAAAA,QAAA5B,KAAA,EAAAS,MAAA,EAAAoB,MAAA;MACA,KAAA/B,KAAA,CAAAd,IAAA,GAAAyB,MAAA,CAAAzB,IAAA;MACA,KAAAc,KAAA,CAAAN,KAAA,GAAAiB,MAAA,CAAAjB,KAAA;MACA,KAAAM,KAAA,CAAAL,OAAA,GAAAgB,MAAA,CAAAhB,OAAA;MACA,KAAAK,KAAA,CAAAE,KAAA,GAAAA,KAAA;MACA,KAAA8B,KAAA,CAAAC,KAAA,yBAAAjC,KAAA,CAAAC,EAAA;IAEA;IACAiC,SAAA,WAAAA,UAAAf,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAe,aAAA;IACA;IACAA,aAAA,WAAAA,cAAA;MAAA,IAAAC,MAAA;MACA;MACA,KAAAvC,OAAA,MAAAG,KAAA,CAAAE,KAAA;QACAhB,IAAA,OAAAA,IAAA;QACAQ,KAAA,OAAAA,KAAA;QACAC,OAAA,OAAAA;MACA;MAEA,KAAAgC,SAAA;QACAS,MAAA,CAAAR,QAAA,CAAAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}