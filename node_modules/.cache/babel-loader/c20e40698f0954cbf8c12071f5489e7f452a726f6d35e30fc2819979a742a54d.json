{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport SideBarVendor from './side-bar';\nexport default {\n  name: 'Workflow',\n  metaInfo: {\n    title: 'Workflow - Quantum VMS',\n    meta: [{\n      property: 'og:title',\n      content: 'Workflow - Quantum VMS'\n    }]\n  },\n  components: {\n    SideBarVendor: SideBarVendor\n  },\n  data: function data() {\n    return {\n      name: '',\n      form: '',\n      workflows: []\n    };\n  },\n  methods: {\n    deleteRow: function deleteRow(index, vendor) {\n      var idx = this.workflows.indexOf(vendor);\n      console.log(idx, index);\n      if (idx > -1) {\n        this.workflows.splice(idx, 1);\n      }\n    },\n    resetModal: function resetModal() {\n      this.name = '';\n      this.form = '';\n    },\n    handleOk: function handleOk(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n      // Push the workflow to workflow array\n      this.workflows.push({\n        name: this.name,\n        form: this.form,\n        status: 'Draft',\n        wf1: 'modeDraft',\n        wf2: 'modeDraft',\n        wf3: 'modeDraft'\n      });\n      this.$nextTick(function () {\n        _this.$bvModal.hide('modal-prevent-closing1');\n      });\n    },\n    editRow: function editRow(index, vendor, button) {\n      this.modal.name = vendor.name;\n      this.modal.email = vendor.email;\n      this.modal.contact = vendor.contact;\n      this.modal.index = index;\n      this.$root.$emit('bv::show::modal', this.modal.id, 'btnShow');\n    },\n    handleOk2: function handleOk2(bvModalEvent) {\n      // Prevent modal from closing\n      bvModalEvent.preventDefault();\n      // Trigger edit handler\n      this.handleSubmit2();\n    },\n    handleSubmit2: function handleSubmit2() {\n      var _this2 = this;\n      // Push the name to submitted names\n      this.workflows[this.modal.index] = {\n        name: this.name,\n        email: this.email,\n        contact: this.contact\n      };\n      this.$nextTick(function () {\n        _this2.$bvModal.hide('modal-prevent-closing2');\n      });\n    }\n  }\n};","map":{"version":3,"names":["SideBarVendor","name","metaInfo","title","meta","property","content","components","data","form","workflows","methods","deleteRow","index","vendor","idx","indexOf","console","log","splice","resetModal","handleOk","bvModalEvent","preventDefault","handleSubmit","_this","push","status","wf1","wf2","wf3","$nextTick","$bvModal","hide","editRow","button","modal","email","contact","$root","$emit","id","handleOk2","handleSubmit2","_this2"],"sources":["src/views/workflow.vue"],"sourcesContent":["<template>\r\n    <!-- Latest compiled and minified CSS -->\r\n    \r\n    <div>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"https://unpkg.com/bootstrap/dist/css/bootstrap.min.css\" />\r\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css\" />\r\n    \r\n        <SideBarVendor></SideBarVendor>\r\n        <div class=\"main\">\r\n            <div class=\"mx-4\">\r\n                <div>   \r\n                    <div class=\"row\">\r\n                        <h1>Workflow</h1>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <p class=\"col\">Overview of workflows for vendor submitted forms</p> \r\n                        <div class=\"col\">\r\n                            <!-- Currently for dummy filling workflow rows. TODO: Change into Search/Filter -->\r\n                            <b-button type=\"button\" class=\"btn btn-dark float-end\" v-b-modal.modal-prevent-closing1>Test Create</b-button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <!-- Modal Create (TODO: change into Search/Filter) -->\r\n                    <b-modal\r\n                        id=\"modal-prevent-closing1\"\r\n                        ref=\"modal\"\r\n                        title=\"Create Workflow\"\r\n                        @show=\"resetModal\"\r\n                        @hidden=\"resetModal\"\r\n                        @ok=\"handleOk\"\r\n                    >\r\n                        <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\r\n                            <b-form-group\r\n                                label=\"Vendor Name\"\r\n                                label-for=\"name-input\"\r\n                                invalid-feedback=\"Vendor Name is required\"\r\n                            >\r\n                                <b-form-input\r\n                                    id=\"name-input\"\r\n                                    v-model=\"name\"\r\n                                    placeholder=\"Enter Vendor Name\"\r\n                                    required\r\n                                ></b-form-input>\r\n                            </b-form-group>\r\n        \r\n                            <b-form-group\r\n                                label=\"Form\"\r\n                                label-for=\"form-input\"\r\n                                invalid-feedback=\"Form is required\"\r\n                            >\r\n                                <b-form-input\r\n                                    id=\"form-input\"\r\n                                    v-model=\"form\"\r\n                                    placeholder=\"Enter Form\"\r\n                                    required\r\n                                ></b-form-input>\r\n                            </b-form-group>\r\n                        </form>\r\n                    </b-modal>\r\n                </div>\r\n    \r\n                <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Vendor Name</th>\r\n                            <th scope=\"col\">Form</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\">Workflow 1</th>\r\n                            <th scope=\"col\">Workflow 2</th>\r\n                            <th scope=\"col\">Workflow 3</th>\r\n                            <th scope=\"col\">Actions</th> <!-- Might Remove Later -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(vendor, k) in workflows\" :key=\"k\">\r\n                            <th scope=\"row\">{{vendor.name}}</th>\r\n                            <td>{{vendor.form}}</td>\r\n                            <td>{{vendor.status}}</td>\r\n                            <td>{{vendor.wf1}}</td>\r\n                            <td>{{vendor.wf2}}</td>\r\n                            <td>{{vendor.wf3}}</td>\r\n                            <td>\r\n                                <b-button type=\"button\" class=\"btn btn-dark mx-1\" @click=\"editRow(k, vendor, $event.target)\" ref=\"btnShow\">Edit</b-button>\r\n                                <b-button type=\"button\" class=\"btn btn-dark mx-1\" @click=\"deleteRow(k, vendor)\">Delete</b-button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\n    import SideBarVendor from './side-bar'\r\n\r\n    export default {\r\n        name: 'Workflow',\r\n        metaInfo: {\r\n            title: 'Workflow - Quantum VMS',\r\n            meta: [\r\n                {\r\n                    property: 'og:title',\r\n                    content: 'Workflow - Quantum VMS',\r\n                },\r\n            ],\r\n        },\r\n        components: {\r\n            SideBarVendor \r\n        },\r\n        data () {\r\n            return {\r\n                name: '',\r\n                form: '',\r\n                workflows: []\r\n            }\r\n        },\r\n      methods: {\r\n            deleteRow(index, vendor) {\r\n                var idx = this.workflows.indexOf(vendor);\r\n                console.log(idx, index);\r\n                if (idx > -1) {\r\n                    this.workflows.splice(idx, 1);\r\n                }\r\n            },\r\n            resetModal() {\r\n                this.name = ''\r\n                this.form = ''\r\n            },\r\n            handleOk(bvModalEvent) {\r\n                // Prevent modal from closing\r\n                bvModalEvent.preventDefault()\r\n                // Trigger submit handler\r\n                this.handleSubmit()\r\n            },\r\n            handleSubmit() {\r\n                // Push the workflow to workflow array\r\n                this.workflows.push(\r\n                    {\r\n                        name : this.name,\r\n                        form : this.form,\r\n                        status : 'Draft',\r\n                        wf1 : 'modeDraft',\r\n                        wf2 : 'modeDraft',\r\n                        wf3 : 'modeDraft'\r\n                    }\r\n                )\r\n        \r\n                this.$nextTick(() => {\r\n                this.$bvModal.hide('modal-prevent-closing1')\r\n                })\r\n            },\r\n            editRow(index, vendor, button) {\r\n                this.modal.name = vendor.name\r\n                this.modal.email = vendor.email\r\n                this.modal.contact = vendor.contact\r\n                this.modal.index = index\r\n                this.$root.$emit('bv::show::modal', this.modal.id, 'btnShow')\r\n        \r\n            },   \r\n            handleOk2(bvModalEvent) {\r\n                // Prevent modal from closing\r\n                bvModalEvent.preventDefault()\r\n                // Trigger edit handler\r\n                this.handleSubmit2()\r\n            },\r\n            handleSubmit2() {\r\n                // Push the name to submitted names\r\n                this.workflows[this.modal.index] = {\r\n                name : this.name,\r\n                email : this.email,\r\n                contact : this.contact\r\n                }\r\n        \r\n                this.$nextTick(() => {\r\n                this.$bvModal.hide('modal-prevent-closing2')\r\n                })\r\n            }\r\n        }\r\n    }\r\n    </script>\r\n    \r\n    <style>\r\n    \r\n    .main {\r\n      margin-left: 240px; /* Same as the width of the sidenav */\r\n      padding: 0px 10px;\r\n    }\r\n    \r\n    \r\n    \r\n    </style>"],"mappings":";;;AA+FA,OAAAA,aAAA;AAEA;EACAC,IAAA;EACAC,QAAA;IACAC,KAAA;IACAC,IAAA,GACA;MACAC,QAAA;MACAC,OAAA;IACA;EAEA;EACAC,UAAA;IACAP,aAAA,EAAAA;EACA;EACAQ,IAAA,WAAAA,KAAA;IACA;MACAP,IAAA;MACAQ,IAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA,WAAAA,UAAAC,KAAA,EAAAC,MAAA;MACA,IAAAC,GAAA,QAAAL,SAAA,CAAAM,OAAA,CAAAF,MAAA;MACAG,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAF,KAAA;MACA,IAAAE,GAAA;QACA,KAAAL,SAAA,CAAAS,MAAA,CAAAJ,GAAA;MACA;IACA;IACAK,UAAA,WAAAA,WAAA;MACA,KAAAnB,IAAA;MACA,KAAAQ,IAAA;IACA;IACAY,QAAA,WAAAA,SAAAC,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAC,YAAA;IACA;IACAA,YAAA,WAAAA,aAAA;MAAA,IAAAC,KAAA;MACA;MACA,KAAAf,SAAA,CAAAgB,IAAA,CACA;QACAzB,IAAA,OAAAA,IAAA;QACAQ,IAAA,OAAAA,IAAA;QACAkB,MAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;MACA,EACA;MAEA,KAAAC,SAAA;QACAN,KAAA,CAAAO,QAAA,CAAAC,IAAA;MACA;IACA;IACAC,OAAA,WAAAA,QAAArB,KAAA,EAAAC,MAAA,EAAAqB,MAAA;MACA,KAAAC,KAAA,CAAAnC,IAAA,GAAAa,MAAA,CAAAb,IAAA;MACA,KAAAmC,KAAA,CAAAC,KAAA,GAAAvB,MAAA,CAAAuB,KAAA;MACA,KAAAD,KAAA,CAAAE,OAAA,GAAAxB,MAAA,CAAAwB,OAAA;MACA,KAAAF,KAAA,CAAAvB,KAAA,GAAAA,KAAA;MACA,KAAA0B,KAAA,CAAAC,KAAA,yBAAAJ,KAAA,CAAAK,EAAA;IAEA;IACAC,SAAA,WAAAA,UAAApB,YAAA;MACA;MACAA,YAAA,CAAAC,cAAA;MACA;MACA,KAAAoB,aAAA;IACA;IACAA,aAAA,WAAAA,cAAA;MAAA,IAAAC,MAAA;MACA;MACA,KAAAlC,SAAA,MAAA0B,KAAA,CAAAvB,KAAA;QACAZ,IAAA,OAAAA,IAAA;QACAoC,KAAA,OAAAA,KAAA;QACAC,OAAA,OAAAA;MACA;MAEA,KAAAP,SAAA;QACAa,MAAA,CAAAZ,QAAA,CAAAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}